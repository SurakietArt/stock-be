"""
Django settings for stock_be project.

Generated by 'django-admin startproject' using Django 5.1.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""
import os
from pathlib import Path

import environ

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
env = environ.Env()
environ.Env.read_env(BASE_DIR / '.env')
ENV = environ.Env(
    SECRET_KEY=(str, "django-insecure"),
    DATABASE_PORT=(int, 5432),
    DATABASE_HOSTNAME=(str, "localhost"),
    DATABASE_NAME=(str, "stock"),
    DATABASE_USERNAME=(str, "postgres"),
    DATABASE_PASSWORD=(str, "postgres"),
    TOKEN_LIFE_TIME=(int, 1),  # hrs
    REFRESH_TOKEN_LIFE_TIME=(int, 360),  # sec
    LINE_LOGIN_URL=(str, "LINE_LOGIN_URL"),
    LINE_GET_TOKEN_URL=(str, "LINE_GET_TOKEN_URL"),
    LINE_LOGIN_REDIRECT_URI=(str, "LINE_LOGIN_REDIRECT_URI"),
    LINE_LOGIN_CHANNEL_SECRET=(str, "LINE_LOGIN_CHANNEL_SECRET"),
    LINE_LOGIN_CLIENT_ID=(str, "LINE_LOGIN_CLIENT_ID"),
    FRONTEND_REDIRECT_URL=(str, "FRONTEND_REDIRECT_URL")
)
# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = ENV("SECRET_KEY")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]

# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "corsheaders",
    # in-app
    "core",
    "stock",
    "customer",
    "line"
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

REST_FRAMEWORK = {
    "DEFAULT_AUTHENTICATION_CLASSES": ("core.middleware.auth_middleware.JWTAuthenticationMiddleware",),
    'DEFAULT_RENDERER_CLASSES': [
        'rest_framework.renderers.JSONRenderer',
        'rest_framework.renderers.TemplateHTMLRenderer',
    ],
}

ROOT_URLCONF = "stock_be.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        'DIRS': [BASE_DIR / 'templates'],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "stock_be.wsgi.application"

# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases
if os.environ.get("DATABASE_URL") is not None:
    DATABASES = {
        # variable name default to DATABASE_URL
        "default": ENV.db_url(),
    }
else:
    DATABASES = {
        "default": {
            "ENGINE": "django.db.backends.postgresql_psycopg2",
            "NAME": ENV("DATABASE_NAME"),
            "USER": ENV("DATABASE_USERNAME"),
            "PASSWORD": ENV("DATABASE_PASSWORD"),
            "HOST": ENV("DATABASE_HOSTNAME"),
            "PORT": ENV("DATABASE_PORT"),
        }
    }

# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]

# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "Asia/Bangkok"

USE_I18N = True
USE_L10N = True
USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = "static/"

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

CORS_ALLOW_ALL_ORIGINS = True

AUTH_USER_MODEL = "core.Users"
SESSION_COOKIE_SECURE = True

TOKEN_LIFE_TIME = ENV("TOKEN_LIFE_TIME")
REFRESH_TOKEN_LIFE_TIME = ENV("REFRESH_TOKEN_LIFE_TIME")


# Line
LINE_LOGIN_URL = ENV("LINE_LOGIN_URL")
LINE_GET_TOKEN = ENV("LINE_GET_TOKEN_URL")
LINE_LOGIN_REDIRECT_URI = ENV("LINE_LOGIN_REDIRECT_URI")
LINE_LOGIN_CHANNEL_SECRET = ENV("LINE_LOGIN_CHANNEL_SECRET")
LINE_LOGIN_CLIENT_ID = ENV("LINE_LOGIN_CLIENT_ID")
FRONTEND_REDIRECT_URL = ENV("FRONTEND_REDIRECT_URL")
